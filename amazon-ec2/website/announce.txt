http://amazon-ec2.rubyforge.org/




Hello Ruby'ists,

I wanted to announce the availability of a major new release (version 0.2.2) of the open source 'amazon-ec2' Ruby Gem.  This is for Ruby/Ruby on Rails developers that want their applications to interface with EC2.

http://amazon-ec2.rubyforge.org/

The original release of this gem (<= 0.1.0 about six months ago) was based on the original sample code provided by the AWS team (Thanks guys!).  This new release represents an almost complete re-write of that code and should prove to be much more reliable, easier to use, and feature complete.

Important : Please note that this is such a major re-write that we were not able to maintain backwards compatibility with the older versions of the gem.  So if you are using a version of 'amazon-ec2' that is less than v 0.2.2 you should carefully read the docs before you upgrade as you will be required to update your code.  You will also want to exercise caution if you are actively using the 'Capazon' gem.  'Capazon' has been deprecated and we'll have more news on that topic soon.  If this is your first install and use of the gem then you are good to go!

Some of the major changes are:

* Re-factored all methods to use Ruby Hashes for all parameters.  Makes figuring out what options to pass and actually passing them much much easier.  Order of params no longer matters and your code will be self documenting when you can read the hash key names for each parameter.

* All responses from EC2 are now sent back as an EC2::Response object.  This is an OpenStruct object that contains everything in the EC2 XML response converted to a real Ruby object data structure.  No more parsing responses or error responses.  The OpenStruct object is created using XmlSimple and is a one-to-one mapping of the structure in the EC2 response XML.

* A complete exception handling framework has been added.  Any exception (either from incorrect args, or as part of the response from EC2) now throw real Ruby exceptions that are subclassed from EC2::Error.  All of the exceptions defined by AWS in the developer guide each have their own exception sub-class.  This lets you handle exceptions on a case by case basis with a great degree of granularity.  Just wrap any calls to EC2 using the gem in a begin/rescue clause.  There are no longer any errors that will come back in some kind of text form.  Either the command is OK and you get an EC2::Response object, or their is a problem and you get EC2::Error or one of its sub-classes.

* The gem now has a full unit test suite with several hundred test cases.  All public methods on the gem have 100% test case coverage, and the overall code coverage according to rcov is 92%.  This has provided us with a much more robust gem and should help us avoid future regression errors with new releases.

* The gem is now up to date with the latest version of the EC2 API (2007-01-19) and all API methods should be covered.  This includes new additions such as the ability to get console output, reboot instances, and running instances with the new NAT addressing scheme.

* The rdocs, website, and README have undergone significant surgery.  The website content is now automatically generated as part of the build and deploy of the gem.

I encourage you to visit the link above for the full information about what's new and why you may want to think about transitioning to this new release.  A lot of work by a handful of people has gone into this new release and we hope you enjoy it.  Stand by for some more news regarding using this gem with Capistrano in the near future.

Enjoy, and please feel free to reach out to me with any questions at grempe -at- rubyforge -dot- org.

Glenn


