=CHANGELOG.txt : Amazon Elastic Compute Cloud (EC2) Ruby Gem

===0.0.5 (12/21/2006)
* Changes to home page documentation and example files to indicate that you 
  should use 'require_gem' instead of a simple require.  Not sure if this 
  is a result of something I am doing in the packaging of the gem that is 
  incorrect or if this is right and proper.  I will investigate further.

===0.0.4 (12/21/2006)
* Applied patch from Kevin Clark to svn version 7.  Thanks for the 
  patch and the description Kevin!  Please report if you 
  encounter any issues with this patched version.  Here is Kevin's 
  description which I requested :  "It helps me to think of modules as boxes full of classes and 
  methods.  REXML is a module which holds various classes related to parsing XML
  including REXML::Node, REXML::Document and REXML::XPath. When you
  include a module it takes everything out of the box and places it in
  the local context.  So, when you include REXML in the global namespace 
  on line 27 of EC2.rb, it includes classes called Node, Document and XPath in the
  global object space. This means that I can't have a class called Node
  in my own project (which I do). The library would be a much better
  neighbor if it instead accessed the REXML::Document and REXML::XPath
  classes explicitly through the module."

===0.0.3 (12/16/2006)
* API CHANGE : Changed method name 'authorize' to 'authorize_security_group_ingress' to ensure consistent 
  naming of Ruby library methods to match AWS EC2 API actions. Alias to 'authorize' for backwards compatibility.
* API CHANGE : Changed method name 'revoke' to 'revoke_security_group_ingress' to ensure consistent 
	naming of Ruby library methods to match AWS EC2 API actions. Alias to 'revoke' for backwards compatibility.
* API CHANGE : Changed method name 'delete_securitygroup' to 'delete_security_group' to ensure consistent 
	naming of Ruby library methods to match AWS EC2 API actions. Alias to 'delete_securitygroup' for backwards compatibility.
* API CHANGE : Changed method name 'describe_securitygroups' to 'describe_security_group' to ensure consistent 
	naming of Ruby library methods to match AWS EC2 API actions. Alias to 'describe_securitygroups' for backwards compatibility.
* API CHANGE : Changed method name 'create_securitygroup' to 'create_security_group' to ensure consistent 
	naming of Ruby library methods to match AWS EC2 API actions. Alias to 'create_securitygroup' for backwards compatibility.
* Added many API rdoc's, some method descriptions copied from Amazon Query API Developer Guide.
* Extracted some parts of the formerly monolithic EC2 library out into separate files for manageability.
* Changed the HTTP 'User-Agent' string used for each request so that we have our own user agent
  to identify this library's calls.  Now set the version # in the user agent string based on the
  master version number for this library which is stored in lib/EC2/version.rb and should only
  be defined in one place.
* Set @http.verify_mode = OpenSSL::SSL::VERIFY_NONE to avoid seeing SSL Cert warning 
  "warning: peer certificate won't be verified in this SSL session". File EC2.rb:96
* Make 'pathlist' utility method a private method (EC2.rb:111).  No reason I can see for this to be exposed.

===0.0.2 (12/14/2006)
* Bugfix in run_instances method.  Method works now.  Patch submitted by Stephen Caudill on AWS forums.  Thanks!

===0.0.1 (12/13/2006)
* Initial release of the Ruby Gem.  This includes the version of the library exactly as provided by 
  Amazon Web Services as example code.  No changes or enhancements to that code were made other than 
  packaging it as a Ruby Gem.
* RubyForge project created.  http://amazon-ec2.rubyforge.org
