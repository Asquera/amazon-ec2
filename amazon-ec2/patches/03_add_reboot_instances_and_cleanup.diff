=== Manifest.txt
==================================================================
--- Manifest.txt	(revision 1264)
+++ Manifest.txt	(local)
@@ -15,5 +15,6 @@
 
 test/test_helper.rb
 test/EC2_test.rb
+test/test_responses.rb
 
 examples/ec2-example.rb
\ No newline at end of file
=== lib/EC2/instances.rb
==================================================================
--- lib/EC2/instances.rb	(revision 1264)
+++ lib/EC2/instances.rb	(local)
@@ -107,6 +107,15 @@
       TerminateInstancesResponse.new(make_request("TerminateInstances", params))
     end
     
+    # The RebootInstances operation requests a reboot of one or more instances. 
+    # This operation is asynchronous; it only queues a request to reboot the specified 
+    # instance(s). The operation will succeed provided the instances are valid and 
+    # belong to the user. Terminated instances will be ignored.
+    def reboot_instances(*instance_ids)
+      raise "No instance ids given" if instance_ids.empty?
+      params = pathlist("InstanceId", instance_ids)
+      ResetInstancesResponse.new(make_request("RebootInstances", params))
+    end
   end
   
 end
=== lib/EC2/responses.rb
==================================================================
--- lib/EC2/responses.rb	(revision 1264)
+++ lib/EC2/responses.rb	(local)
@@ -223,7 +223,15 @@
     end
   end
   
+  class ResetInstancesResponse < Response
+    def parse
+      doc = REXML::Document.new(@http_xml)
+      # Let's use the tag they're actually returning since it doesn't match the docs -- Kevin Clark 2/26/07
+      REXML::XPath.match( doc, "//return").first.text == "true" ? true : false 
+    end
+  end
   
+  
   class CreateSecurityGroupResponse < Response
     def parse
       # If we don't get an error, the creation succeeded.
=== lib/EC2.rb
==================================================================
--- lib/EC2.rb	(revision 1264)
+++ lib/EC2.rb	(local)
@@ -39,7 +39,7 @@
   PORTS_BY_SECURITY = { true => 443, false => 80 }
   
   # This is the version of the API as defined by Amazon Web Services
-  API_VERSION = '2006-10-01'
+  API_VERSION = '2007-01-03'
   
   # This release version is passed in with each request as part
   # of the HTTP 'User-Agent' header.  Set this be the same value 
=== test/EC2_test.rb
==================================================================
--- test/EC2_test.rb	(revision 1264)
+++ test/EC2_test.rb	(local)
@@ -1,13 +0,0 @@
-require File.dirname(__FILE__) + '/test_helper.rb'
-
-# This is the top of the test suite.  This file is what is 
-# automatically run when 'rake test' is run.  Individual test
-# cases are found in the tc_* files.  Do any setup for
-# all of the test cases in the setup method of this file.
-
-class EC2Test < Test::Unit::TestCase
-
-  def setup
-  end
-
-end
=== test/tc_ec2_base.rb
==================================================================
--- test/tc_ec2_base.rb	(revision 1264)
+++ test/tc_ec2_base.rb	(local)
@@ -1,45 +0,0 @@
-require 'test/unit'
-
-# Use this test case to test all of the base functions of the EC2 
-# library.  The are the core functions in EC2.rb (auth, signing, HTTP GET, etc.)
-
-class EC2Test < Test::Unit::TestCase
-  
-  def test_ec2_base
-    assert true
-  end
-    
-  # fails
-  #def test_require_underscore
-  #  assert(require 'amazon_ec2')
-  #end
-
-  # fails
-  #def test_require_hyphenated
-  #  assert(require 'amazon-ec2')
-  #end
-
-  #def test_require_gem
-  #  assert(require_gem 'amazon-ec2')
-  #end
-
-  # fails
-  #def test_require_short_name_downcase
-  #  assert(require 'ec2')
-  #end
-
-  # fails
-  #def test_require_short_name_upcase
-  #  assert(require 'EC2')
-  #end
-
-  # fails
-  #def test_require_short_name_downcase_rb
-  #  assert(require 'ec2.rb')
-  #end
-
-  #def test_require_short_name_upcase_rb
-  #  assert(require 'EC2.rb')
-  #end
-
-end
=== test/tc_image_attributes.rb
==================================================================
--- test/tc_image_attributes.rb	(revision 1264)
+++ test/tc_image_attributes.rb	(local)
@@ -1,9 +0,0 @@
-require 'test/unit'
-
-class EC2Test < Test::Unit::TestCase
-  
-  def test_image_attributes
-    assert true
-  end
-
-end
=== test/tc_images.rb
==================================================================
--- test/tc_images.rb	(revision 1264)
+++ test/tc_images.rb	(local)
@@ -1,9 +0,0 @@
-require 'test/unit'
-
-class EC2Test < Test::Unit::TestCase
-  
-  def test_images
-    assert true
-  end
-
-end
=== test/tc_instances.rb
==================================================================
--- test/tc_instances.rb	(revision 1264)
+++ test/tc_instances.rb	(local)
@@ -1,9 +0,0 @@
-require 'test/unit'
-
-class EC2Test < Test::Unit::TestCase
-  
-  def test_instances
-    assert true
-  end
-
-end
=== test/tc_keypairs.rb
==================================================================
--- test/tc_keypairs.rb	(revision 1264)
+++ test/tc_keypairs.rb	(local)
@@ -1,9 +0,0 @@
-require 'test/unit'
-
-class EC2Test < Test::Unit::TestCase
-  
-  def test_keypairs
-    assert true
-  end
-
-end
=== test/tc_responses.rb
==================================================================
--- test/tc_responses.rb	(revision 1264)
+++ test/tc_responses.rb	(local)
@@ -1,9 +0,0 @@
-require 'test/unit'
-
-class EC2Test < Test::Unit::TestCase
-  
-  def test_responses
-    assert true
-  end
-
-end
=== test/tc_security_groups.rb
==================================================================
--- test/tc_security_groups.rb	(revision 1264)
+++ test/tc_security_groups.rb	(local)
@@ -1,9 +0,0 @@
-require 'test/unit'
-
-class EC2Test < Test::Unit::TestCase
-  
-  def test_security_groups
-    assert true
-  end
-
-end
=== test/tc_version.rb
==================================================================
--- test/tc_version.rb	(revision 1264)
+++ test/tc_version.rb	(local)
@@ -1,9 +0,0 @@
-require 'test/unit'
-
-class EC2Test < Test::Unit::TestCase
-  
-  def test_version
-    assert true
-  end
-
-end
=== test/test_helper.rb
==================================================================
--- test/test_helper.rb	(revision 1264)
+++ test/test_helper.rb	(local)
@@ -1,15 +1,10 @@
-require 'test/unit'
-
-# include the test cases that are part of this suite.
-# these are broken out into the same functional groups
-# as the module components in the lib/EC2 dir.
-require 'tc_ec2_base'
-require 'tc_images'
-require 'tc_image_attributes'
-require 'tc_keypairs'
-require 'tc_instances'
-require 'tc_responses'
-require 'tc_security_groups'
-require 'tc_version'
-
-require File.dirname(__FILE__) + '/../lib/EC2'
+$:.unshift File.expand_path('../lib')
+require "test/unit"
+begin
+  require 'rubygems'
+  require 'mocha'
+  require 'stubba'
+rescue LoadError
+  abort "You need mocha installed to run tests"
+end
+require "EC2"
=== test/test_ec2.rb
==================================================================
--- test/test_ec2.rb	(revision 1264)
+++ test/test_ec2.rb	(local)
@@ -0,0 +1,19 @@
+require "test_helper"
+
+class TestEC2 < Test::Unit::TestCase
+  def setup
+    @conn = EC2::AWSAuthConnection.new('not a key', 'not a secret')
+  end
+  
+  def test_reboot_instances
+    body = <<-RESPONSE
+    <RebootInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2007-01-03/">
+        <return>true</return>
+    </RebootInstancesResponse>
+    RESPONSE
+    
+    @conn.expects(:make_request).with('RebootInstances', {"InstanceId.1"=>"i-2ea64347", "InstanceId.2"=>"i-21a64348"}).
+          returns stub(:body => body, :is_a? => true)
+    assert_equal true, @conn.reboot_instances('i-2ea64347', 'i-21a64348').parse
+  end
+end
\ No newline at end of file
=== test/test_responses.rb
==================================================================
--- test/test_responses.rb	(revision 1264)
+++ test/test_responses.rb	(local)
@@ -0,0 +1,16 @@
+require "test_helper"
+
+class TestResetResponse < Test::Unit::TestCase
+  def setup
+    body = <<-RESPONSE
+    <RebootInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2007-01-03/">
+        <return>true</return>
+    </RebootInstancesResponse>
+    RESPONSE
+    @response = EC2::ResetInstancesResponse.new(stub(:body => body, :is_a? => true))
+  end
+  
+  def test_parse
+    assert_equal true, @response.parse
+  end
+end
\ No newline at end of file
